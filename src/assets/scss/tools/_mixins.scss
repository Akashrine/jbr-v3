/*==============================
=            Mixins            =
==============================*/

/**
*
* Mixin for breakpoints
*
**/
/**
 * Mixin handling breakpoints for media queries / Mobile First
 */
@mixin breakpoint($point) {
    @if $point == large {
        @media (min-width: 48em) {
            @content;
        }
        //960px
    }
    @if $point == medium {
        @media (min-width: 38em) {
            @content;
        }
        //760px
    }
    @if $point == small {
        @media (min-width: 28em){
            @content;
        }
    }
}

/**
*
* Clearfix
*
**/
@mixin clearfix {
    *zoom: 1;
    &:before,
    &:after {
        content: "";
        display: table;
    }
    &:after {
        clear: both;
    }
}

@mixin aligner{
  display: flex;
  align-items: center;
  justify-content: center;
}

@mixin contentAlign() {
    display: flex;
    justify-content: center;
}

/*=========================================================================
=            // Semantic.gs //             =
=========================================================================*/



@function gridsystem-width($columns: $columns) {
    @return $column-width * $columns + $gutter-width * $columns;
}



/*==========  Grid part  ==========*/


@mixin row($columns: $columns) {
    display: block;
    width: $total-width * ($gutter-width + gridsystem-width($columns)) / gridsystem-width($columns);
    max-width: $content-width;
    margin: 0 $total-width * $gutter-width * 0.5 / gridsystem-width($columns) * -1;
    @include clearfix;
}

@mixin column($x, $columns: $columns) {
    display: inline;
    float: left;
    width: $total-width * (($gutter-width + $column-width) * $x - $gutter-width) / gridsystem-width($columns);
    margin: 0 $total-width * $gutter-width * 0.5 / gridsystem-width($columns);
}

@mixin push($offset: 1) {
    margin-left: $total-width * ($gutter-width + $column-width) * $offset / gridsystem-width($columns) + $total-width * $gutter-width * 0.5 / gridsystem-width($columns);
}

@mixin pull($offset: 1) {
    margin-right: $total-width * ($gutter-width + $column-width) * $offset / gridsystem-width($columns) + $total-width * $gutter-width * 0.5 / gridsystem-width($columns);
}


/*=====  End of Layout and Grid (kind of)  ======*/